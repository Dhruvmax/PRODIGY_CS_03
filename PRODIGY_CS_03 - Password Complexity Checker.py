# -*- coding: utf-8 -*-
"""untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Dhruvmax/4be370cae089f721c3ec2a781e0e96d5/untitled2.ipynb
"""

alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
def encryption(plain_text,shift_key):
  cipher_text = ""
  for char in plain_text:
    position = alphabet.index(char)
    new_position = (position + shift_key) %26
    cipher_text += alphabet[new_position]
  print(f"here the text after encryption {cipher_text}")

def decryption(plain_text,shift_key):
  cipher_text = ""
  for char in plain_text:
    position = alphabet.index(char)
    new_position = (position - shift_key) %26
    cipher_text += alphabet[new_position]
  print(f"here the text after encryption {cipher_text}")

what_to_do =input("type 'encrypt' for encryption , 'decrypt'  for decryption:  ")
text = input("type your message: ")
shift = int(input("Enter  shift key: \n"))

if what_to_do == "encrypt":
  encryption(plain_text=text,shift_key=shift)

elif what_to_do == "decrypt":
  decryption(text,shift)

import re
password = input("enter your password")
if len(password) < 8:
  print("password should be at least 8 characters")
elif not re.search("[A-Z]",password):
  print("password should contain at least one upper case Letter")
elif not re.search("[a-z]",password):
  print("password should contain at least one lower case Letter")
elif not re.search("[0-9]",password):
  print("password should contain at least one number")
elif not re.search("[_@$]",password):
  print("password should contain at least one special character")
else:
  print("password is strong")

